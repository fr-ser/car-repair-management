// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  userName String @unique
  hash     String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Article {
  id          String   @id
  price       Decimal
  amount      Decimal?
  description String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Client {
  id           Int     @id @default(autoincrement())
  clientNumber String? @unique // this is a human-readable identifier for the car based on the ID

  firstName   String?
  lastName    String?
  email       String?
  landline    String?
  company     String?
  birthday    String? // there is no "Date" type in SQLite
  comment     String?
  phoneNumber String?
  postalCode  String?
  city        String?
  street      String?

  cars Car[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Car {
  id        Int     @id @default(autoincrement())
  carNumber String? @unique // this is a human-readable identifier for the car based on the ID

  licensePlate      String
  model             String
  manufacturer      String
  firstRegistration String? // there is no "Date" type in SQLite
  color             String?
  engineCapacity    String?
  comment           String?
  fuelType          String?
  enginePower       String?
  oilChangeDate     String? // there is no "Date" type in SQLite
  oilChangeKm       Float?
  tires             String?
  inspectionDate    String? // there is no "Date" type in SQLite
  vin               String?
  timingBeltKm      Float?
  timingBeltDate    String? // there is no "Date" type in SQLite
  documentField2    String?
  documentField3    String?

  clientId Int?
  client   Client? @relation(fields: [clientId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
